import React from 'react';
import CodeComponent from '../../../components/CodeComponent';
import OrderList from '../../../components/OrderedList';
import PlainText from '../../../components/PlainText';
import Title from '../../../components/Title';
import ProjectEulerBaseContainer from '../@common/ProjectEulerBaseContainer';
import { problem12_javascript } from './helpers';

function Problem12() {
  return (
    <ProjectEulerBaseContainer problem="12. Highly Divisible Triangular Number">
      <PlainText>
        The triangle numbers are generated by the formula T(n) = n(n + 1)/2. We need to find the first triangle number
        with over 500 divisors.
      </PlainText>

      <Title>Key Concepts:</Title>
      <OrderList num={1}>Triangle Numbers: The nth triangle number is given by T(n) = n(n + 1) / 2.</OrderList>
      <OrderList num={2}>
        Divisor Counting: To find the number of divisors for a number, we can factor it and use the formula based on the
        prime factorization.
      </OrderList>

      <Title>Step-by-Step Approach:</Title>
      <OrderList num={1}>Generate triangle numbers using the formula T(n) = n(n + 1) / 2.</OrderList>
      <OrderList num={2}>Count the divisors of each triangle number using its prime factorization.</OrderList>
      <OrderList num={3}>
        Stop when the number of divisors exceeds 500, and return the corresponding triangle number.
      </OrderList>

      <Title>Algorithm Breakdown:</Title>
      <PlainText>
        The algorithm calculates triangle numbers iteratively, counts their divisors, and checks if they exceed 500. We
        use the property that T(n) is the product of n and n + 1 divided by 2.
      </PlainText>

      <Title>JavaScript Code:</Title>
      <CodeComponent code={problem12_javascript} />

      <Title>Explanation:</Title>
      <OrderList num={1}>
        **Generating Triangle Numbers**: Each triangle number is generated using T(n) = n(n + 1) / 2.
      </OrderList>
      <OrderList num={2}>
        **Counting Divisors**: We can find the number of divisors by checking all numbers up to the square root of the
        triangle number.
      </OrderList>
      <OrderList num={3}>
        **Tracking Results**: Each time we find a triangle number, we check its divisor count and compare it to 500.
      </OrderList>

      <Title>Output:</Title>
      <PlainText>The first triangle number to have over 500 divisors is:</PlainText>
      <CodeComponent
        code={`The first triangle number to have over 500 divisors is: 76,576
`}
      />
      <PlainText>This result is the correct answer to Problem 12 of Project Euler.</PlainText>
    </ProjectEulerBaseContainer>
  );
}

export default Problem12;
